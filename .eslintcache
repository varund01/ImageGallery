[{"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/index.js":"1","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/App.js":"2","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/reportWebVitals.js":"3","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Post.js":"4","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Home.js":"5","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Login.js":"6","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/CustomModal.js":"7","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Signup.js":"8","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Routes.js":"9","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/FetchImages.js":"10","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Category.js":"11","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Header.js":"12","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Card.js":"13","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/CarouselFormat.js":"14","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/ImageUpload.js":"15","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/CustomAlert.js":"16","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/ImageGallery.js":"17","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Pagination.js":"18","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/PaginationImages.js":"19"},{"size":500,"mtime":1611410645412,"results":"20","hashOfConfig":"21"},{"size":134,"mtime":1611664319507,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1611410645412,"results":"23","hashOfConfig":"21"},{"size":1961,"mtime":1613552056267,"results":"24","hashOfConfig":"21"},{"size":8115,"mtime":1613370707638,"results":"25","hashOfConfig":"21"},{"size":5352,"mtime":1613464638520,"results":"26","hashOfConfig":"21"},{"size":444,"mtime":1613548680487,"results":"27","hashOfConfig":"21"},{"size":4529,"mtime":1613029648212,"results":"28","hashOfConfig":"21"},{"size":1291,"mtime":1613282849651,"results":"29","hashOfConfig":"21"},{"size":859,"mtime":1613025402800,"results":"30","hashOfConfig":"21"},{"size":8845,"mtime":1613029335373,"results":"31","hashOfConfig":"21"},{"size":1652,"mtime":1613215509613,"results":"32","hashOfConfig":"21"},{"size":682,"mtime":1611848798000,"results":"33","hashOfConfig":"21"},{"size":1227,"mtime":1611848798000,"results":"34","hashOfConfig":"21"},{"size":2059,"mtime":1611848798000,"results":"35","hashOfConfig":"21"},{"size":1000,"mtime":1613549816392,"results":"36","hashOfConfig":"21"},{"size":635,"mtime":1613551371019,"results":"37","hashOfConfig":"21"},{"size":3569,"mtime":1613551604454,"results":"38","hashOfConfig":"21"},{"size":3619,"mtime":1613550912018,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"13h2v7t",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/index.js",[],["88","89"],"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/App.js",[],"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/reportWebVitals.js",[],"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Post.js",["90","91","92","93"],"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Home.js",["94","95","96","97","98","99","100","101","102","103","104"],"import React,{useState} from 'react';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport {Button,Avatar} from \"@material-ui/core\"\nimport axios,{post} from 'axios';\n \nimport Post from './Post';\nimport ImageUpload from './ImageUpload';\nimport CustomModal from './CustomModal';\nimport Header from './Header';\nimport CustomAlert from './CustomAlert';\n\nimport '../css/Home.css'\nimport Pagination from './Pagination';\n\n\nfunction Home() {\n    const history = useHistory();\n    const location = useLocation();\n    \n    const [modal, setModal] = useState({\n        modalIsOpen: false,\n        modalTitle: \"\",\n        modalBody: \"\",\n    });\n    const [posts, setPosts] = useState(JSON.parse(localStorage.getItem(\"allImages\")));\n    const [image, setImage] = useState(null);\n    const [caption, setCaption] = useState('');\n    const [uploadCategory, setUploadCategory] = useState('');\n    const [selectedImg, setSelectedImg] = useState(null); \n    const [categories] = useState(JSON.parse(localStorage.getItem(\"categories\")));\n    const [showImageUpload,setShowImageUpload] = useState(false);\n    const [showCategoryImages,setShowCategoryImages] = useState(\"All\");\n    const [imagesByCategory,setImagesByCategory] = useState(null);\n    const [visible,setVisible] = useState(\"No\");\n    \n    \n    console.log(posts);\n    localStorage.setItem(\"allImages\",JSON.stringify(posts));\n\n    const handleChange = (e) => {\n        if(e.target.files[0]) {\n            setImage(e.target.files[0]);\n        }\n    } \n\n    const handleVisibile = (e) => {\n        setVisible(e.target.value);\n    }\n\n    const fileUpload = (file) => {\n        const url = 'http://localhost:8070/upload';\n        const formData = new FormData();\n        formData.append('file',file)\n        formData.append('email',localStorage.getItem(\"email\"))\n        formData.append('caption',caption)\n        console.log(\"visible\");\n        if(visible === \"Yes\")\n            formData.append('visible',\"1\")\n        else\n            formData.append(\"visible\",\"0\")\n        if(uploadCategory!=\"No Category\") {\n            formData.append('category',uploadCategory)\n        }\n        else {\n            formData.append('category',\"\")\n        }\n        const config = {\n            headers: {\n                'Content-type': 'multipart/form-data'\n            }\n        }\n        return post(url, formData,config)\n    }\n\n\n    const handleUpload = (e) => {\n        e.preventDefault();\n        if(image===null) {\n            setModal({\n                modalIsOpen: true,\n                modalTitle: \"File is not Choosen\",\n                modalBody: \"Please select a file to upload...\",\n            });\n            return;\n        }\n        fileUpload(image).then((response)=>{\n            // console.log(response.data);\n            // posts ?\n            // setPosts([\n            //     ...posts,\n            //     response.data\n            // ])\n            // :\n            // setPosts([\n            //     response.data\n            // ])\n            window.location.reload();\n        });\n        setShowImageUpload(!showImageUpload);\n        cancelCourse();\n    }\n\n    \n    const showImagesHandler = (e) => {\n        setShowCategoryImages(e.target.value);\n        if(e.target.value == \"All\"){\n            setImagesByCategory(posts);\n            return;\n        }\n        const ImagesData = new FormData();\n        ImagesData.append(\"email\",localStorage.getItem(\"email\"));\n        ImagesData.append(\"category\",e.target.value);\n        console.log(e.target.id);\n        axios({\n            url: \"http://localhost:8080/getCategoryImages\",\n            method: \"post\",\n            headers: {\n                \"Content-type\":\"application/x-www-form-urlencoded\",\n            },\n            data: ImagesData,\n        }).then((res)=>{\n            console.log(\"here is category \",res.data);\n            setImagesByCategory(res.data);\n        })\n    }\n     \n\n    const cancelCourse = () => { \n        document.getElementById(\"cap\").value=\"\";\n        document.getElementById('cap1').value = null;\n        setImage(null);\n        setCaption(\"\");\n    }\n\n    if (!(localStorage.getItem(\"email\"))) {\n        history.push(\"/login\");\n    }\n    console.log(\"fdf \",localStorage.getItem(\"email\"),JSON.parse(localStorage.getItem(\"allImages\")));\n    return (\n        <div className=\"home\">\n            <Header />\n            \n            {\n                <div className=\"imageupload\">\n                        <h2 onClick={()=>setShowImageUpload(!showImageUpload)}>Upload a image</h2><br />\n\n                        {\n                            showImageUpload ?\n                            categories.length ?\n                                <>\n                                    Select the category Name<br />\n                                    <select className=\"selectCategory\" onChange={(e)=>setUploadCategory(e.target.value)}>\n                                        <option value=\"No Category\">No Category</option>\n                                        {\n                                            categories.map((category,index)=>(\n                                                <option key={index} value={category}>#{category}</option>\n                                            ))\n                                        }\n                                    </select><br />\n                                    <div className=\"viewQuery\">\n                                        Do you want others to view this Image?\n                                        <input className=\"viewQuery__text\" onChange={handleVisibile} type=\"radio\" name=\"viewImage\" value=\"Yes\"/> Yes\n                                        <input className=\"viewQuery__text\" onChange={handleVisibile} type=\"radio\" name=\"viewImage\" value=\"No\" /> No\n                                    </div>\n                                    <br />\n                                    <input type=\"text\" id=\"cap\" placeholder=\"Enter a caption\" onChange={e => setCaption(e.target.value)} />\n                                    <input type=\"file\"  id=\"cap1\" onChange={e=>handleChange(e)} required/><br />\n                                    <Button variant=\"contained\" color=\"primary\" onClick={handleUpload}>Upload</Button>\n                                </>\n                            : null\n                            : null\n                        }\n                </div>\n            }\n\n            <div className=\"home__posts\">\n                <h3>Images</h3>\n                {/* { \n                    categories.length ?\n                        <>\n                            Select the category Name<br />\n                            <select className=\"selectCategory\" onChange={showImagesHandler}>\n                                <option value=\"All\">All</option>\n                                {\n                                    categories.map((category,index)=>(\n                                        <option key={index} value={category}>#{category}</option>\n                                    ))\n                                }\n                            </select><br />\n                        </>\n                    :\n                    null\n                } */}\n                {/* {\n                        posts ?\n                            posts.map((post,index) => (\n                                <Post key={index} posts={posts} setPosts={setPosts} setSelectedImg={setSelectedImg} username={post.username} caption={post.caption} category={post.category} imageUrl={`assets/${post.imageUrl}`}/>\n                            )).reverse()\n\n                        : \n                            <p>There are no posts right now</p>\n                    \n                } */}\n                <Pagination />\n            </div>\n            {selectedImg && <CustomModal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/>}\n\n            <CustomAlert\n                isShown={modal.modalIsOpen}\n                setIsShown={setModal}\n                ModalTitle={modal.modalTitle}\n                ModalBody={modal.modalBody}\n            />\n        </div>\n    )\n}\n\nexport default Home","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Login.js",[],"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/CustomModal.js",[],"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Signup.js",[],"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Routes.js",["105","106"],"import React from 'react'\nimport { Carousel } from 'react-responsive-carousel';\nimport {BrowserRouter, Route, Switch ,Redirect} from \"react-router-dom\";\nimport CarouselFormat from './CarouselFormat';\n\n\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport Category from \"./Category\";\nimport ImageGallery from './ImageGallery';\nimport Pagination from './Pagination';\n\n\nfunction Routes() {\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route exact path='/'>\n                    <Redirect to=\"/login\" />\n                </Route>\n                <Route exact path=\"/login\">\n                    <Login />\n                </Route>\n                <Route exact path=\"/home\">\n                    <Home />\n                </Route>\n                <Route exact path=\"/signup\">\n                    <Signup />\n                </Route>\n                <Route exact path=\"/category\">\n                    <Category />\n                </Route>\n                <Route exact path=\"/images\">\n                    <ImageGallery />\n                </Route>\n                <Route exact path=\"/pagination\">\n                    <Pagination />\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default Routes\n","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/FetchImages.js",["107","108"],"import React from 'react';\nimport axios from 'axios';\nimport {Redirect, useHistory} from 'react-router-dom';\nimport Home from './Home';\n\nfunction FetchImages({posts, URL}) {\n    const getImages = async() => {\n        const formData = new FormData();\n        formData.append(\"email\",localStorage.getItem(\"email\"));\n        const allImages = await axios({\n            url:\"http://localhost:8070/allImages\",\n            method:\"post\",\n            headers: {\n                \"Content-type\":\"application/x-www-form-urlencoded\",\n            },\n            data: formData,\n        });\n        console.log(\"fetching\",posts);\n        localStorage.setItem(\"allImages\",JSON.stringify(allImages.data));\n        // history.push(\"/home\");\n    }\n    getImages()\n    return (\n        <div>\n            <Redirect to={URL} />\n        </div>\n    )\n}\n\nexport default FetchImages\n","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Category.js",["109","110","111","112","113"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport FetchImages from './FetchImages';\n\nimport Header from './Header';\nimport Card from './Card';\nimport CustomModal from './CustomModal';\nimport CustomAlert from './CustomAlert';\n\nimport \"../css/Category.css\";\nimport { Button } from '@material-ui/core';\n\nfunction Category() {\n\n    const [modal, setModal] = useState({\n        modalIsOpen: false,\n        modalTitle: \"\",\n        modalBody: \"\",\n    });\n    const [createCategoryName,setCreateCategoryName] = useState(\"\");\n    const [deleteCategoryName,setDeleteCategoryName] = useState(\"\");\n    const [showAllCategories,setShowAllCategories] = useState(true);\n    const [createCategory,setCreateCategory] = useState(true);\n    const [deleteCategory,setDeleteCategory] = useState(true);\n    const [categories,setCategories] = useState(JSON.parse(localStorage.getItem(\"categories\")));\n    const [showImages,setShowImages] = useState(\"\");\n    const [imagesByCategory, setImagesByCategory] = useState([]);\n    const [selectedImg, setSelectedImg] = useState(null);\n    const [visitedNum,setVisitedNum] = useState(1);\n\n    console.log(categories);\n    localStorage.setItem(\"categories\",JSON.stringify(categories));\n    FetchImages(localStorage.getItem(\"allImages\") ,\"/category\");\n\n    const createCategoryHandler = () => {\n        const createFD = new FormData();\n        createFD.append(\"email\",localStorage.getItem(\"email\"));\n        createFD.append(\"category\",createCategoryName);\n        const response = axios({\n            url: \"http://localhost/categories/create.php\",\n            method: \"post\",\n            headers: {\n                \"Content-type\":\"application/x-www-form-urlencoded\",\n            },\n            data: createFD,\n        });\n        console.log(response);\n        categories ?\n            setCategories([\n                ...categories,\n                createCategoryName\n            ])\n            :\n            setCategories([\n                createCategoryName\n            ])\n        document.getElementById(\"createinput\").value=\"\";\n        setModal({\n            modalIsOpen: true,\n            modalTitle: \"Category is created successfully\",\n            modalBody: \"You can now keep the images in this category...\",\n          });\n        setCreateCategoryName(\"\");\n        \n    }\n\n    const deleteCategoryHandler = () => {\n        const deleteFD = new FormData();\n        deleteFD.append(\"email\",localStorage.getItem(\"email\"));\n        deleteFD.append(\"category\",deleteCategoryName);\n        const response = axios({\n            url: \"http://localhost/categories/delete.php\",\n            method: \"post\",\n            headers: {\n                \"Content-type\":\"application/x-www-form-urlencoded\",\n            },\n            data: deleteFD,\n        });\n        console.log(response);\n        const array = [...categories];\n        var index = array.indexOf(deleteCategoryName);\n        if(index !== -1) {\n            array.splice(index,1);\n            setCategories(array);\n        }\n        setDeleteCategoryName(\"\");\n        setModal({\n            modalIsOpen: true,\n            modalTitle: \"Category is deleted successfully\",\n            modalBody: \"All the images under this category were deleted successfully\",\n          });\n        //window.location.reload();\n    }\n\n    const getImagesHandler = (e) => {\n        const ImagesData = new FormData();\n        ImagesData.append(\"email\",localStorage.getItem(\"email\"));\n        ImagesData.append(\"category\",e.target.id);\n        console.log(e.target.id);\n        axios({\n            url: \"http://localhost:8091/getCategoryImages\",\n            method: \"post\",\n            headers: {\n                \"Content-type\":\"application/x-www-form-urlencoded\",\n            },\n            data: ImagesData,\n        }).then((res)=>{\n            console.log(res.data);\n            setImagesByCategory(res.data);\n        })\n        \n    }\n\n\n    return (\n        <div className=\"category\">\n            <Header />\n            <div className=\"setVisited\">\n                <p className=\"category__subdiv__Header\" onClick={()=>setVisitedNum(1)}>Display all Categories</p>\n                <p className=\"category__subdiv__Header\" onClick={()=>setVisitedNum(2)}>Create Categories</p>\n                <p className=\"category__subdiv__Header\" onClick={()=>setVisitedNum(3)}>Delete Categories</p>\n            </div>\n            \n            {\n                visitedNum === 1 ?\n            <div className=\"category__subdiv\">\n                <p className=\"category__subdiv__text\" >Display all Categories</p>\n                {\n                    showAllCategories ?\n                    <>\n                        <div className=\"category__display__list\">\n                            {\n                                categories.length ?\n                                    categories.map((category,index)=>(\n                                        <div key={index} className=\"category__display__list__item\"><p id={category}  onClick={getImagesHandler} className=\"category__display__list__text\">#{category}</p></div>\n                                    ))\n                                :\n                                    <p>No categories right now! Click Create categories for adding</p>\n                            }\n                        </div>\n                        <div className=\"category__images__list\">\n                            {\n                                imagesByCategory ?\n                                    imagesByCategory.length ?\n                                    <>\n                                        {\n                                            imagesByCategory.map((Image,index)=>(\n                                                <Card key={index} caption={Image.caption} setSelectedImg={setSelectedImg} imageUrl={`assets/${Image.imageUrl}`} />\n                                            ))\n                                        }\n                                    </>\n                                    : null\n                                : <p>There are no Images in this Category</p>\n                            }\n                            {selectedImg && <CustomModal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/>}\n                        </div>\n                    </>\n                    :\n                        null\n                }\n            </div>\n            :null\n            }\n            {\n                visitedNum === 2 ?\n            <div className=\"category__subdiv\">\n                <p className=\"category__subdiv__text\">Create a new Category</p>\n                {\n                    createCategory ?\n                    <div className=\"category__create\">\n                        Enter the category Name<br />\n                        <input type=\"text\" id=\"createinput\" name=\"createCategoryName\" value={createCategoryName} onChange={(e)=>setCreateCategoryName(e.target.value)}/><br/>\n                        <Button variant=\"contained\" id=\"category__create__button\" onClick={createCategoryHandler}>Create</Button>\n                    </div>\n                    : null\n                }\n            </div>\n            :\n            null\n            }\n            {\n                visitedNum === 3 ?\n            <div className=\"category__subdiv\">\n                <p className=\"category__subdiv__text\" >Delete a Category</p>\n                {\n                    deleteCategory ?\n                    <div className=\"category__create\">\n                    { \n                        categories.length ?\n                            <>\n                                Select the category Name<br />\n                                <select className=\"selectCategory\" onChange={(e)=>setDeleteCategoryName(e.target.value)}>\n                                    <option>None</option>\n                                    {\n                                        categories.map((category,index)=>(\n                                            <option key={index} value={category}>#{category}</option>\n                                        ))\n                                    }\n                                </select><br /><br />\n                                <Button variant=\"contained\" id=\"category__create__button\" onClick={deleteCategoryHandler}>Delete</Button>\n                            </>\n                        :\n                        <p>No categories right now!</p>\n                    }\n                    </div>\n                    : null\n                }\n            </div>\n            :\n            null\n            }\n            <CustomAlert\n                isShown={modal.modalIsOpen}\n                setIsShown={setModal}\n                ModalTitle={modal.modalTitle}\n                ModalBody={modal.modalBody}\n            />\n        </div>\n    )\n}\n\nexport default Category\n","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Header.js",["114","115"],"import React from 'react';\nimport {Button,Avatar} from \"@material-ui/core\";\nimport '../css/Home.css';\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\n\nfunction header() {\n\n    const history = new useHistory();\n\n    const categoryHandler = () => {\n        history.push(\"/category\");\n    }\n    const logoutHandler = () => {\n        localStorage.clear();\n        history.push(\"/login\");\n    };\n    const toggleShowImageUpload = () => {\n        history.push(\"/home\");\n    }\n    const ImageGalleryHandler = () => {\n        history.push(\"/images\");\n    }\n    return (\n        <div className=\"home__header\">\n            <div className=\"home__subheader\">\n                <p className=\"home__subheader__text\" onClick={ImageGalleryHandler}>ImageGallery</p>\n\n                <p className=\"image_upload_button\" onClick={toggleShowImageUpload}>Upload</p>\n\n                <p className=\"category_button\" onClick={categoryHandler}>Categories</p>\n                {/* <p className=\"home__subheader__text\"><Link to=\"/images\">CarouselView</Link></p> */}\n            </div>\n            <div>\n                <div className=\"home__subheader\">\n                    <Avatar\n                        className=\"home__avatar\"\n                        alt={localStorage.getItem(\"email\")}\n                        src=\"/static/images/avatar/1.jpg\"    \n                    />\n\n                    <h4 className=\"home__subheader__text\">{localStorage.getItem(\"email\")}</h4>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={logoutHandler}>Logout</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default header\n","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Card.js",["116","117","118","119","120"],"import React from 'react'\nimport {useHistory} from 'react-router-dom';\nimport axios from 'axios';\nimport './../css/Post.css'\nimport FetchImages from './FetchImages';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nfunction Card({caption, setSelectedImg ,imageUrl}) {\n\n    \n    return (\n        \n        <div className = \"post\" > \n            <img className=\"post__image\" src={imageUrl} onClick={()=>setSelectedImg(imageUrl)} alt=\"image is not available\"/>\n            <div className=\"post__text__button\">\n                <div>\n                    <h4 className=\"post__text\">{caption}</h4>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Card\n","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/CarouselFormat.js",["121","122","123","124","125","126"],"import React,{useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\nimport Post from './Post';\nimport \"../css/carousel.css\";\n\n\nfunction CarouselFormat() {\n    const [posts, setPosts] = useState(JSON.parse(localStorage.getItem(\"allImages\")));\n    const [selectedImg, setSelectedImg] = useState(null); \n    console.log(posts);\n    const onChange = () => {\n\n    }\n    const onClickItem = () => {\n\n    }\n    const onClickThumb = () => {\n\n    }\n    return (\n        <div className=\"carousel__block\"> \n            <Carousel class=\"carousel__style\" showArrows={true} onChange={onChange} onClickItem={onClickItem} onClickThumb={onClickThumb}>\n                {\n                posts ?\n                    posts.map((post,index) => (\n                        <div className=\"carousel__slider\">\n                        <img class=\"carousel__img\" src={`assets/${post.imageUrl}`} />\n                        </div>\n                    )).reverse()\n                : \n                    <p>There are no posts right now</p>\n                }\n            </Carousel>\n        </div>\n    )\n}\n\nexport default CarouselFormat\n","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/ImageUpload.js",["127","128","129"],"import { Button } from '@material-ui/core'\nimport React, {useState} from 'react';\nimport { useHistory , useLocation} from 'react-router-dom';\nimport axios,{post} from 'axios';\nimport '../css/ImageUpload.css'\n\nfunction ImageUpload() {\n    const history = useHistory();\n    const location = useLocation();\n    const [image, setImage] = useState(null);\n    const [progress, setProgress] = useState(0);\n    const [caption, setCaption] = useState('');\n\n    const handleChange = (e) => {\n        if(e.target.files[0]) {\n            setImage(e.target.files[0]);\n        }\n    } \n\n\n    const fileUpload = (file) => {\n        const url = 'http://localhost:8080/upload';\n        const formData = new FormData();\n        formData.append('file',file)\n        formData.append('email',location.state.email)\n        formData.append('caption',caption)\n        const config = {\n            headers: {\n                'Content-type': 'multipart/form-data'\n            }\n        }\n        return post(url, formData,config)\n    }\n\n\n    const handleUpload = (e) => {\n        e.preventDefault();\n        fileUpload(image).then((response)=>{\n            console.log(response);\n            const formData = new FormData();\n            formData.append(\"email\",location.state.email);\n            const allImages = axios({\n                url:\"http://localhost:8080/allImages\",\n                method:\"post\",\n                headers: {\n                    \"Content-type\":\"application/x-www-form-urlencoded\",\n                },\n                data: formData,\n            });\n            console.log(allImages);\n            \n        })\n        cancelCourse()\n    }\n\n    const cancelCourse = () => { \n        setCaption(\"\");\n        setImage(null);\n    }\n\n    return (\n        <div className=\"imageupload\">\n            <input type=\"text\" placeholder=\"Enter a caption\" onChange={e => setCaption(e.target.value)} />\n            <input type=\"file\" onChange={e=>handleChange(e)} />\n            <Button onClick={handleUpload}>Upload</Button>\n        </div>\n    )\n}\n\nexport default ImageUpload\n","/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/CustomAlert.js",[],"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/ImageGallery.js",[],"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/Pagination.js",["130","131","132"],"/home/varunduduku/Desktop/Assignment/ImageGallery/frontend/src/components/PaginationImages.js",["133","134","135"],"import React, { useState } from 'react';\nimport {Button} from '@material-ui/core';\nimport axios from 'axios';\n\nimport Post from './Post';\nimport CustomModal from './CustomModal';\n\n\nfunction PaginationImages() {\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [totalNumberOfPages,setTotalNumberOfPages] = useState(0)\n    const [imagesByPage,setImagesByPage] = useState()\n    const [flag,setFlag] = useState(1)\n    const [selectedImg, setSelectedImg] = useState(null); \n\n    \n    const previousHandler = () => {\n        setCurrentPage(currentPage-1);\n        console.log(\"page is \",currentPage);\n        getImagesByPage(currentPage-1);\n    }\n\n    const nextHandler = () => {\n        setCurrentPage(currentPage+1);\n        console.log(\"page is \",currentPage);\n        getImagesByPage(currentPage+1);\n    }\n    console.log(\"page is \",currentPage);\n    const callFunc = () => {\n        getImagesByPage()\n    }\n\n    const getTotalNumberOfPages = () => {\n        const fd = new FormData();\n        fd.append(\"email\",localStorage.getItem(\"email\"));\n        axios({\n            url : \"http://localhost:7800/getSizeOfVisible\",\n            method : \"post\",\n            headers: {\n                \"Content-type\":\"application/x-www-form-urlencoded\",\n                \"Token\":localStorage.getItem(\"Token\"),\n            },\n            data: fd,\n        }).then((res)=>{\n            console.log(res.data,\"ddddddddd\");\n            console.log(Number(res.data));\n            setTotalNumberOfPages(Math.ceil(Number(res.data)/5));\n            console.log(totalNumberOfPages,\"d\");\n        })\n    }\n    getTotalNumberOfPages();\n\n    const getImagesByPage = (curr) => {\n        console.log(\"curr is\",curr)\n        const fd = new FormData();\n        fd.append(\"email\",localStorage.getItem(\"email\"));\n        fd.append(\"limit\",\"5\");\n        fd.append(\"offset\",''+((curr-1)*5));\n        axios({\n            url : \"http://localhost:7800/getAllVisibleImages\",\n            method : \"post\",\n            headers: {\n                \"Content-type\":\"application/x-www-form-urlencoded\",\n                \"Token\":localStorage.getItem(\"Token\"),\n            },\n            data: fd,\n        }).then((res)=>{\n            console.log(res.data);\n            setImagesByPage(res.data);\n        })\n    }\n    \n    if(flag === 1){\n        getImagesByPage();\n        setFlag(2);\n    }\n\n    return (\n        <div>\n            <div>\n                {\n                    totalNumberOfPages != 0 ?\n                    <>Page {currentPage} of {totalNumberOfPages}</>\n                    :null\n                }\n                {\n                    currentPage != 1 ?\n                    <Button onClick={previousHandler}>Previous</Button>\n                    :null\n                }\n                {\n                    currentPage < totalNumberOfPages ?\n                    <Button onClick={nextHandler}>Next</Button>\n                    :null\n                }\n            </div>\n            <div>\n                {\n                    imagesByPage ?\n                    imagesByPage.map((post,index) => (\n                            <Post key={index} posts={imagesByPage} setPosts={setImagesByPage} setSelectedImg={setSelectedImg} username={post.username} caption={post.caption} category={post.category} imageUrl={`assets/${post.imageUrl}`}/>\n                        ))\n\n                    : \n                        <p>There are no posts right now</p>\n                }\n            </div>\n            {selectedImg && <CustomModal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/>}\n        </div>\n    )\n}\n\nexport default PaginationImages\n",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":7,"column":9,"nodeType":"142","messageId":"143","endLine":7,"endColumn":15},{"ruleId":"140","severity":1,"message":"144","line":11,"column":11,"nodeType":"142","messageId":"143","endLine":11,"endColumn":18},{"ruleId":"140","severity":1,"message":"145","line":16,"column":15,"nodeType":"142","messageId":"143","endLine":16,"endColumn":23},{"ruleId":"146","severity":1,"message":"147","line":41,"column":13,"nodeType":"148","endLine":41,"endColumn":126},{"ruleId":"140","severity":1,"message":"149","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"150","line":3,"column":16,"nodeType":"142","messageId":"143","endLine":3,"endColumn":22},{"ruleId":"140","severity":1,"message":"151","line":6,"column":8,"nodeType":"142","messageId":"143","endLine":6,"endColumn":12},{"ruleId":"140","severity":1,"message":"152","line":7,"column":8,"nodeType":"142","messageId":"143","endLine":7,"endColumn":19},{"ruleId":"140","severity":1,"message":"153","line":18,"column":11,"nodeType":"142","messageId":"143","endLine":18,"endColumn":19},{"ruleId":"140","severity":1,"message":"154","line":25,"column":19,"nodeType":"142","messageId":"143","endLine":25,"endColumn":27},{"ruleId":"140","severity":1,"message":"155","line":32,"column":12,"nodeType":"142","messageId":"143","endLine":32,"endColumn":30},{"ruleId":"140","severity":1,"message":"156","line":33,"column":12,"nodeType":"142","messageId":"143","endLine":33,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":61,"column":26,"nodeType":"159","messageId":"160","endLine":61,"endColumn":28},{"ruleId":"140","severity":1,"message":"161","line":104,"column":11,"nodeType":"142","messageId":"143","endLine":104,"endColumn":28},{"ruleId":"157","severity":1,"message":"162","line":106,"column":27,"nodeType":"159","messageId":"160","endLine":106,"endColumn":29},{"ruleId":"140","severity":1,"message":"163","line":2,"column":10,"nodeType":"142","messageId":"143","endLine":2,"endColumn":18},{"ruleId":"140","severity":1,"message":"164","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":22},{"ruleId":"140","severity":1,"message":"165","line":3,"column":19,"nodeType":"142","messageId":"143","endLine":3,"endColumn":29},{"ruleId":"140","severity":1,"message":"166","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":12},{"ruleId":"140","severity":1,"message":"167","line":22,"column":30,"nodeType":"142","messageId":"143","endLine":22,"endColumn":50},{"ruleId":"140","severity":1,"message":"168","line":23,"column":27,"nodeType":"142","messageId":"143","endLine":23,"endColumn":44},{"ruleId":"140","severity":1,"message":"169","line":24,"column":27,"nodeType":"142","messageId":"143","endLine":24,"endColumn":44},{"ruleId":"140","severity":1,"message":"170","line":26,"column":12,"nodeType":"142","messageId":"143","endLine":26,"endColumn":22},{"ruleId":"140","severity":1,"message":"171","line":26,"column":23,"nodeType":"142","messageId":"143","endLine":26,"endColumn":36},{"ruleId":"140","severity":1,"message":"149","line":4,"column":10,"nodeType":"142","messageId":"143","endLine":4,"endColumn":14},{"ruleId":"140","severity":1,"message":"172","line":4,"column":28,"nodeType":"142","messageId":"143","endLine":4,"endColumn":39},{"ruleId":"140","severity":1,"message":"165","line":2,"column":9,"nodeType":"142","messageId":"143","endLine":2,"endColumn":19},{"ruleId":"140","severity":1,"message":"173","line":3,"column":8,"nodeType":"142","messageId":"143","endLine":3,"endColumn":13},{"ruleId":"140","severity":1,"message":"174","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":19},{"ruleId":"140","severity":1,"message":"175","line":6,"column":8,"nodeType":"142","messageId":"143","endLine":6,"endColumn":18},{"ruleId":"146","severity":1,"message":"147","line":15,"column":13,"nodeType":"148","endLine":15,"endColumn":126},{"ruleId":"140","severity":1,"message":"176","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":16},{"ruleId":"140","severity":1,"message":"151","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":12},{"ruleId":"140","severity":1,"message":"154","line":10,"column":19,"nodeType":"142","messageId":"143","endLine":10,"endColumn":27},{"ruleId":"140","severity":1,"message":"177","line":11,"column":12,"nodeType":"142","messageId":"143","endLine":11,"endColumn":23},{"ruleId":"140","severity":1,"message":"178","line":11,"column":25,"nodeType":"142","messageId":"143","endLine":11,"endColumn":39},{"ruleId":"179","severity":1,"message":"180","line":29,"column":25,"nodeType":"148","endLine":29,"endColumn":86},{"ruleId":"140","severity":1,"message":"144","line":8,"column":11,"nodeType":"142","messageId":"143","endLine":8,"endColumn":18},{"ruleId":"140","severity":1,"message":"181","line":11,"column":12,"nodeType":"142","messageId":"143","endLine":11,"endColumn":20},{"ruleId":"140","severity":1,"message":"182","line":11,"column":22,"nodeType":"142","messageId":"143","endLine":11,"endColumn":33},{"ruleId":"140","severity":1,"message":"183","line":30,"column":11,"nodeType":"142","messageId":"143","endLine":30,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":83,"column":40,"nodeType":"159","messageId":"160","endLine":83,"endColumn":42},{"ruleId":"157","severity":1,"message":"158","line":88,"column":33,"nodeType":"159","messageId":"160","endLine":88,"endColumn":35},{"ruleId":"140","severity":1,"message":"183","line":30,"column":11,"nodeType":"142","messageId":"143","endLine":30,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":83,"column":40,"nodeType":"159","messageId":"160","endLine":83,"endColumn":42},{"ruleId":"157","severity":1,"message":"158","line":88,"column":33,"nodeType":"159","messageId":"160","endLine":88,"endColumn":35},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'repsonse' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Link' is defined but never used.","'Avatar' is defined but never used.","'Post' is defined but never used.","'ImageUpload' is defined but never used.","'location' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'showCategoryImages' is assigned a value but never used.","'imagesByCategory' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'showImagesHandler' is assigned a value but never used.","Expected '===' and instead saw '=='.","'Carousel' is defined but never used.","'CarouselFormat' is defined but never used.","'useHistory' is defined but never used.","'Home' is defined but never used.","'setShowAllCategories' is assigned a value but never used.","'setCreateCategory' is assigned a value but never used.","'setDeleteCategory' is assigned a value but never used.","'showImages' is assigned a value but never used.","'setShowImages' is assigned a value but never used.","'useLocation' is defined but never used.","'axios' is defined but never used.","'FetchImages' is defined but never used.","'DeleteIcon' is defined but never used.","'ReactDOM' is defined but never used.","'selectedImg' is assigned a value but never used.","'setSelectedImg' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'callFunc' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]